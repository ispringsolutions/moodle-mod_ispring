{"version":3,"file":"api.min.js","sources":["../src/api.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n *\n * @class       mod_ispring/api\n * @copyright   2024 iSpring Solutions Inc.\n * @author      Desktop Team <desktop-team@ispring.com>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call} from 'core/ajax';\n\nconst INVALID_PLAYER_ID_CODE = 'invalidplayerid';\n\nclass Api {\n    constructor(sessionId, contentId, returnUrl, boxErrorId, iframeId, suspendData) {\n        this._sessionId = sessionId;\n        this._contentId = contentId;\n        this._returnUrl = returnUrl;\n        this._boxErrorId = boxErrorId;\n        this._iframeId = iframeId;\n        this._suspendData = suspendData;\n    }\n\n    getSuspendData() {\n        return this._suspendData;\n    }\n\n    setSuspendData(suspendData) {\n        this._suspendData = suspendData;\n        if (this._sessionId)\n        {\n            call([{\n                methodname: 'mod_ispring_set_suspend_data',\n                args: {\n                    'session_id': this._sessionId,\n                    'player_id': this._playerId,\n                    'suspend_data': JSON.stringify(suspendData),\n                }\n            }])[0]\n                .then((response) => {\n                    showErrorBoxIfNeeded(response, this._boxErrorId, this._iframeId);\n                });\n        }\n    }\n\n    startSession(state) {\n        this._playerId = state.playerId;\n        call([{\n            methodname: 'mod_ispring_start_session',\n            args: {\n                'content_id': this._contentId,\n                'state': JSON.stringify(state)\n            }\n        }])[0]\n            .then((result) => {\n                this._sessionId = result['session_id'];\n            })\n            .catch(() => {\n            });\n    }\n\n    setState(state) {\n        call([{\n            methodname: 'mod_ispring_set_state',\n            args: {\n                'session_id': this._sessionId,\n                'state': JSON.stringify(state)\n            }\n        }])[0]\n            .then((response) => {\n                showErrorBoxIfNeeded(response, this._boxErrorId, this._iframeId);\n            })\n            .catch(() => {\n            });\n    }\n\n    endSession(state) {\n        call([{\n            methodname: 'mod_ispring_end_session',\n            args: {\n                'session_id': this._sessionId,\n                'state': JSON.stringify(state)\n            }\n        }])[0]\n            .then((response) => {\n                showErrorBoxIfNeeded(response, this._boxErrorId, this._iframeId);\n            })\n            .catch(() => {\n            });\n    }\n\n    terminate() {\n        window.location.replace(this._returnUrl);\n    }\n}\n\n/**\n * @param {array} response\n * @param {string} boxId\n * @param {string} iframeId\n */\nfunction showErrorBoxIfNeeded(response, boxId, iframeId) {\n    if ('warning' in response && response['warning'].length > 0) {\n        const warning = response['warning'][0];\n\n        if (warning['warningcode'] === INVALID_PLAYER_ID_CODE) {\n            document.getElementById(boxId).style.display = 'block';\n            document.getElementById(boxId).innerHTML = warning['message'];\n            document.getElementById(iframeId).parentElement.style.display = 'none';\n        }\n    }\n}\n\n/**\n * Delete all cached player data before settings new data\n * @return void\n */\nfunction deleteAllPlayerData() {\n    const regex = /^ispring::/;\n    Object.keys(localStorage).forEach((key) => {\n        if (regex.test(key)) {\n            localStorage.removeItem(key);\n        }\n    });\n}\n\n/**\n * @param {string|null} persistStateId\n * @param {string|null} persistState\n */\nfunction setPlayerData(persistStateId, persistState) {\n    if (localStorage && persistStateId && persistState) {\n        localStorage.setItem(persistStateId, persistState);\n    }\n}\n\nexport const init = (contentId, playerUrl, iframeId, returnUrl, preloaderId, errorBoxId) => {\n    let suspendData = null;\n    call([{\n        methodname: 'mod_ispring_get_player_data',\n        args: {\n            'content_id': contentId\n        }\n    }])[0]\n        .then((result) => {\n            deleteAllPlayerData();\n            setPlayerData(result['persist_state_id'], result['persist_state']);\n            suspendData = JSON.parse(result['suspend_data']);\n        })\n        .catch(() /*noexcept*/ => {\n        })\n        .then(() => {\n            window['ispring_moodle_connector'] = new Api(0, contentId, returnUrl, errorBoxId, iframeId, suspendData);\n            document.getElementById(iframeId).src = playerUrl;\n            document.getElementById(preloaderId).remove();\n        });\n};\n"],"names":["Api","constructor","sessionId","contentId","returnUrl","boxErrorId","iframeId","suspendData","_sessionId","_contentId","_returnUrl","_boxErrorId","_iframeId","_suspendData","getSuspendData","this","setSuspendData","methodname","args","_playerId","JSON","stringify","then","response","showErrorBoxIfNeeded","startSession","state","playerId","result","catch","setState","endSession","terminate","window","location","replace","boxId","length","warning","document","getElementById","style","display","innerHTML","parentElement","playerUrl","preloaderId","errorBoxId","persistStateId","persistState","regex","Object","keys","localStorage","forEach","key","test","removeItem","deleteAllPlayerData","setItem","parse","src","remove"],"mappings":"8JA2BMA,IACFC,YAAYC,UAAWC,UAAWC,UAAWC,WAAYC,SAAUC,kBAC1DC,WAAaN,eACbO,WAAaN,eACbO,WAAaN,eACbO,YAAcN,gBACdO,UAAYN,cACZO,aAAeN,YAGxBO,wBACWC,KAAKF,aAGhBG,eAAeT,kBACNM,aAAeN,YAChBQ,KAAKP,2BAEA,CAAC,CACFS,WAAY,+BACZC,KAAM,YACYH,KAAKP,qBACNO,KAAKI,uBACFC,KAAKC,UAAUd,iBAEnC,GACCe,MAAMC,WACHC,qBAAqBD,SAAUR,KAAKJ,YAAaI,KAAKH,cAKtEa,aAAaC,YACJP,UAAYO,MAAMC,wBAClB,CAAC,CACFV,WAAY,4BACZC,KAAM,YACYH,KAAKN,iBACVW,KAAKC,UAAUK,WAE5B,GACCJ,MAAMM,cACEpB,WAAaoB,OAAM,cAE3BC,OAAM,SAIfC,SAASJ,sBACA,CAAC,CACFT,WAAY,wBACZC,KAAM,YACYH,KAAKP,iBACVY,KAAKC,UAAUK,WAE5B,GACCJ,MAAMC,WACHC,qBAAqBD,SAAUR,KAAKJ,YAAaI,KAAKH,cAEzDiB,OAAM,SAIfE,WAAWL,sBACF,CAAC,CACFT,WAAY,0BACZC,KAAM,YACYH,KAAKP,iBACVY,KAAKC,UAAUK,WAE5B,GACCJ,MAAMC,WACHC,qBAAqBD,SAAUR,KAAKJ,YAAaI,KAAKH,cAEzDiB,OAAM,SAIfG,YACIC,OAAOC,SAASC,QAAQpB,KAAKL,sBAS5Bc,qBAAqBD,SAAUa,MAAO9B,aACvC,YAAaiB,UAAYA,SAAQ,QAAYc,OAAS,EAAG,OACnDC,QAAUf,SAAQ,QAAY,GA5Fb,oBA8FnBe,QAAO,cACPC,SAASC,eAAeJ,OAAOK,MAAMC,QAAU,QAC/CH,SAASC,eAAeJ,OAAOO,UAAYL,QAAO,QAClDC,SAASC,eAAelC,UAAUsC,cAAcH,MAAMC,QAAU,uBA4BxD,CAACvC,UAAW0C,UAAWvC,SAAUF,UAAW0C,YAAaC,kBACrExC,YAAc,oBACb,CAAC,CACFU,WAAY,8BACZC,KAAM,YACYf,cAElB,GACCmB,MAAMM,aAdQoB,eAAgBC,+BAZ7BC,MAAQ,aACdC,OAAOC,KAAKC,cAAcC,SAASC,MAC3BL,MAAMM,KAAKD,MACXF,aAAaI,WAAWF,QAwBxBG,GAfWV,eAgBGpB,OAAM,iBAhBOqB,aAgBerB,OAAM,cAfpDyB,cAAgBL,gBAAkBC,cAClCI,aAAaM,QAAQX,eAAgBC,cAejC1C,YAAca,KAAKwC,MAAMhC,OAAM,iBAElCC,OAAM,SAENP,MAAK,KACFW,OAAM,yBAA+B,IAAIjC,IAAI,EAAGG,UAAWC,UAAW2C,WAAYzC,SAAUC,aAC5FgC,SAASC,eAAelC,UAAUuD,IAAMhB,UACxCN,SAASC,eAAeM,aAAagB"}